controller_manager:
  ros__parameters:
    update_rate: 600  # Hz
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster
    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController
    robotiq_gripper_controller:
      type: position_controllers/GripperActionController
    servo_controller:
      type: joint_trajectory_controller/JointTrajectoryController
    force_torque_sensor_broadcaster:
      type: force_torque_sensor_broadcaster/ForceTorqueSensorBroadcaster
    joint_trajectory_admittance_controller:
      type: joint_trajectory_admittance_controller/JointTrajectoryAdmittanceController
    velocity_force_controller:
      type: velocity_force_controller/VelocityForceController


joint_state_broadcaster:
  ros__parameters:
    use_local_topics: false
    joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6
    interfaces:
      - position
      - velocity
      - effort

joint_trajectory_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    command_joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.0
      goal_time: 0.0
      joint_1:
        goal: 0.05
      joint_2:
        goal: 0.05
      joint_3:
        goal: 0.05
      joint_4:
        goal: 0.05
      joint_5:
        goal: 0.05
      joint_6:
        goal: 0.05
    acceleration_limits:
      joint_1: 10.0
      joint_2: 10.0
      joint_3: 10.0
      joint_4: 10.0
      joint_5: 10.0
      joint_6: 10.0

servo_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6

    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    command_joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.0
      goal_time: 0.0
      joint_1:
        goal: 0.05
      joint_2:
        goal: 0.05
      joint_3:
        goal: 0.05
      joint_4:
        goal: 0.05
      joint_5:
        goal: 0.05
      joint_6:
        goal: 0.05
    acceleration_limits:
      joint_1: 10.0
      joint_2: 10.0
      joint_3: 10.0
      joint_4: 10.0
      joint_5: 10.0
      joint_6: 10.0

force_torque_sensor_broadcaster:
  ros__parameters:
    # The hardware interface name.
    # If you share a ros2_control.yaml across hardware and simulation, the simulation <site> name should be set to the hardware's hardware interface name.
    sensor_name: tcp_fts_sensor
    state_interface_names:
      - force.x
      - force.y
      - force.z
      - torque.x
      - torque.y
      - torque.z
    # The frame the sensor is published in.
    # If you share a ros2_control.yaml across hardware and simulation, frame_id should reference the link in your URDF corresponding to the hardware's pose, and your site and URDF link should be identical.
    # To verify simulation and hardware frames are identical, `ros2 run tf2_ros tf2_echo site_name hardware_frame` should return all 0s.
    frame_id: tool0


joint_trajectory_admittance_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5
      - joint_6
    base_frame: base_link
    sensor_frame: link_6
    ee_frame: link_6
    stop_accelerations: [3.0, 3.0, 3.0, 3.0, 5.0, 5.0]

velocity_force_controller:
  ros__parameters:
    # Joint group to control.
    planning_group_name: manipulator
    # The tip link of the kinematic chain, i.e. the frame that will be controlled.
    ee_frame: grasp_link
    # The frame where the force / torque sensor reading is given.
    # (Needs to exist in the kinematic chain).
    sensor_frame: grasp_link
    # Maximum joint-space velocities.
    max_joint_velocity:
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
    # Maximum joint-space accelerations.
    max_joint_acceleration:
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
    # Maximum Cartesian-space velocities.
    max_cartesian_velocity:
      - 0.25
      - 0.25
      - 0.25
      - 1.0
      - 1.0
      - 1.0
    # Maximum Cartesian-space accelerations.
    max_cartesian_acceleration:
      - 2.0
      - 2.0
      - 2.0
      - 4.0
      - 4.0
      - 4.0
    # Additional optional parameters for reference (set to defaults):
    # Cutoff frequency ratio for the FTS filter. Valid values range from 0 to 1, where 1 is the sampling frequency.
    ft_cutoff_frequency_ratio: 1.0
    # Rate in Hz at which the controller will publish the state.
    state_publish_rate: 10
    # Damping coefficient for the Jacobian damped least-squares inverse.
    jacobian_damping: 0.002
    # Timeout in seconds after which the controller will stop motion if no new commands are received.
    command_timeout: 0.2
    # Padding (in radians) to add to joint position limits as a safety margin.
    joint_limit_position_tolerance: 0.02
    # Joints that the controller will command. If not specified, if takes the same value as `joints`.
    # This can be useful to implement layered control, where some joints may be controlled by a different controller
    # downstream.
    # command_joints: []
    # The type of command interface to use. Supported values are "position" and "velocity".
    command_interfaces: ["position"]
