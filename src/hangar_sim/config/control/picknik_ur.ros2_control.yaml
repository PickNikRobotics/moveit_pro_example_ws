controller_manager:
  ros__parameters:
    update_rate: 600  # Hz
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster
    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController
    servo_controller:
      type: joint_trajectory_controller/JointTrajectoryController
    force_torque_sensor_broadcaster:
      type: force_torque_sensor_broadcaster/ForceTorqueSensorBroadcaster
    platform_velocity_controller:
      type: clearpath_mecanum_drive_controller/MecanumDriveController
    platform_velocity_controller_nav2:
      type: clearpath_mecanum_drive_controller/MecanumDriveController
    vacuum_gripper:
      type: position_controllers/GripperActionController
    velocity_force_controller:
      type: velocity_force_controller/VelocityForceController

vacuum_gripper:
  ros__parameters:
    default: true
    joint: suction_cup
    allow_stalling: true
    stall_timeout: 0.01

platform_velocity_controller:
  ros__parameters:
    use_sim_time: False
    interface_name: velocity
    command_joint_names: ["front_left_wheel", "rear_left_wheel", "rear_right_wheel", "front_right_wheel"]
    reference_joint_names: ["linear_x_joint", "linear_y_joint", "rotational_yaw_joint"]
    body_frame_control: false
    body_frame_yaw_joint: "rotational_yaw_joint"
    front_left_wheel_command_joint_name: "front_left_wheel"
    front_right_wheel_command_joint_name: "front_right_wheel"
    rear_right_wheel_command_joint_name: "rear_right_wheel"
    rear_left_wheel_command_joint_name: "rear_left_wheel"

    kinematics.wheels_radius: 0.05
    kinematics.sum_of_robot_center_projection_on_X_Y_axis: 0.4704
    wheel_separation_multiplier: 1.0
    wheel_radius_multiplier: 1.0

    publish_rate: 50.0
    reference_timeout: 0.1
    use_stamped_vel: False

    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]

    cmd_vel_timeout: 0.5

    base_frame_id: "ridgeback_base_link"
    odom_frame_id: "odom"
    enable_odom_tf: false

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear.x.has_velocity_limits: true
    linear.x.has_acceleration_limits: true
    linear.x.has_jerk_limits: false
    linear.x.max_velocity: 1.3
    linear.x.min_velocity: -1.3
    linear.x.max_acceleration: 1.0
    linear.x.min_acceleration: -1.0
    linear.x.max_jerk: 0.0
    linear.x.min_jerk: 0.0

    linear.y.has_velocity_limits: true
    linear.y.has_acceleration_limits: true
    linear.y.has_jerk_limits: false
    linear.y.max_velocity: 1.3
    linear.y.min_velocity: -1.3
    linear.y.max_acceleration: 1.0
    linear.y.min_acceleration: -1.0
    linear.y.max_jerk: 0.0
    linear.y.min_jerk: 0.0

    angular.z.has_velocity_limits: true
    angular.z.has_acceleration_limits: true
    angular.z.has_jerk_limits: false
    angular.z.max_velocity: 4.0
    angular.z.min_velocity: -4.0
    angular.z.max_acceleration: 2.0
    angular.z.min_acceleration: -2.0
    angular.z.max_jerk: 0.0
    angular.z.min_jerk: 0.0

platform_velocity_controller_nav2:
  ros__parameters:
    use_sim_time: False
    interface_name: velocity
    command_joint_names: ["front_left_wheel", "rear_left_wheel", "rear_right_wheel", "front_right_wheel"]
    body_frame_control: true
    front_left_wheel_command_joint_name: "front_left_wheel"
    front_right_wheel_command_joint_name: "front_right_wheel"
    rear_right_wheel_command_joint_name: "rear_right_wheel"
    rear_left_wheel_command_joint_name: "rear_left_wheel"

    kinematics.wheels_radius: 0.05
    kinematics.sum_of_robot_center_projection_on_X_Y_axis: 0.4704
    wheel_separation_multiplier: 1.0
    wheel_radius_multiplier: 1.0

    publish_rate: 50.0
    reference_timeout: 0.1
    use_stamped_vel: False

    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]

    cmd_vel_timeout: 0.5

    base_frame_id: "ridgeback_base_link"
    odom_frame_id: "odom"
    enable_odom_tf: false

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear.x.has_velocity_limits: true
    linear.x.has_acceleration_limits: true
    linear.x.has_jerk_limits: false
    linear.x.max_velocity: 1.3
    linear.x.min_velocity: -1.3
    linear.x.max_acceleration: 1.0
    linear.x.min_acceleration: -1.0
    linear.x.max_jerk: 0.0
    linear.x.min_jerk: 0.0

    linear.y.has_velocity_limits: true
    linear.y.has_acceleration_limits: true
    linear.y.has_jerk_limits: false
    linear.y.max_velocity: 1.3
    linear.y.min_velocity: -1.3
    linear.y.max_acceleration: 1.0
    linear.y.min_acceleration: -1.0
    linear.y.max_jerk: 0.0
    linear.y.min_jerk: 0.0

    angular.z.has_velocity_limits: true
    angular.z.has_acceleration_limits: true
    angular.z.has_jerk_limits: false
    angular.z.max_velocity: 4.0
    angular.z.min_velocity: -4.0
    angular.z.max_acceleration: 2.0
    angular.z.min_acceleration: -2.0
    angular.z.max_jerk: 0.0
    angular.z.min_jerk: 0.0

joint_state_broadcaster:
  ros__parameters:
    use_local_topics: false
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
      - front_rocker
      - front_left_wheel
      - front_right_wheel
      - rear_left_wheel
      - rear_right_wheel
      - linear_x_joint
      - linear_y_joint
      - rotational_yaw_joint
    interfaces:
      - position
      - velocity


joint_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
      - linear_x_joint
      - linear_y_joint
      - rotational_yaw_joint
    command_interfaces:
      - velocity
    state_interfaces:
      - position
      - velocity
    command_joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
      - platform_velocity_controller/linear_x_joint
      - platform_velocity_controller/linear_y_joint
      - platform_velocity_controller/rotational_yaw_joint
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    open_loop_control: false # this is closed loop
    gains:
      shoulder_pan_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      shoulder_lift_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      elbow_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_1_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_2_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_3_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      linear_x_joint:
        p: 2.0
        ff_velocity_scale: 1.0
      linear_y_joint:
        p: 2.0
        ff_velocity_scale: 1.0
      rotational_yaw_joint:
        p: 2.0
        ff_velocity_scale: 1.0
    constraints:
      stopped_velocity_tolerance: 0.0
      goal_time: 0.0
      shoulder_pan_joint:
        goal: 0.05
      shoulder_lift_joint:
        goal: 0.05
      elbow_joint:
        goal: 0.05
      wrist_1_joint:
        goal: 0.05
      wrist_2_joint:
        goal: 0.05
      wrist_3_joint:
        goal: 0.05
      linear_x_joint:
        goal: 0.05
      linear_y_joint:
        goal: 0.05
      rotational_yaw_joint:
        goal: 0.05

    acceleration_limits:
      shoulder_pan_joint: 10.0
      shoulder_lift_joint: 10.0
      elbow_joint: 10.0
      wrist_1_joint: 10.0
      wrist_2_joint: 10.0
      wrist_3_joint: 10.0

servo_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
      - linear_x_joint
      - linear_y_joint
      - rotational_yaw_joint
    command_interfaces:
      - velocity
    state_interfaces:
      - position
      - velocity
    command_joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
      - platform_velocity_controller/linear_x_joint
      - platform_velocity_controller/linear_y_joint
      - platform_velocity_controller/rotational_yaw_joint
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    open_loop_control: false # this is closed loop
    gains:
      shoulder_pan_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      shoulder_lift_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      elbow_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_1_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_2_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      wrist_3_joint:
        p: 10.0
        ff_velocity_scale: 1.0
      linear_x_joint:
        p: 2.0
        ff_velocity_scale: 1.0
      linear_y_joint:
        p: 2.0
        ff_velocity_scale: 1.0
      rotational_yaw_joint:
        p: 2.0
        ff_velocity_scale: 1.0
    constraints:
      stopped_velocity_tolerance: 0.0
      goal_time: 0.0
      shoulder_pan_joint:
        goal: 0.05
      shoulder_lift_joint:
        goal: 0.05
      elbow_joint:
        goal: 0.05
      wrist_1_joint:
        goal: 0.05
      wrist_2_joint:
        goal: 0.05
      wrist_3_joint:
        goal: 0.05
      linear_x_joint:
        goal: 0.05
      linear_y_joint:
        goal: 0.05
      rotational_yaw_joint:
        goal: 0.05

    acceleration_limits:
      shoulder_pan_joint: 10.0
      shoulder_lift_joint: 10.0
      elbow_joint: 10.0
      wrist_1_joint: 10.0
      wrist_2_joint: 10.0
      wrist_3_joint: 10.0

force_torque_sensor_broadcaster:
  ros__parameters:
    sensor_name: tcp_fts_sensor
    state_interface_names:
      - force.x
      - force.y
      - force.z
      - torque.x
      - torque.y
      - torque.z
    frame_id: tool0


velocity_force_controller:
  ros__parameters:
    # Joints that the controller will use.
    # The joints must be in the same order as they appear in the kinematic chain.
    joints:
      - linear_x_joint
      - linear_y_joint
      - rotational_yaw_joint
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    # The joints that the controller will command.
    # The 'platform' joints are renamed to match the joint names exposed by the 'platform_velocity_controller', which
    # enables layered control of those joints.
    command_joints:
      - platform_velocity_controller/linear_x_joint
      - platform_velocity_controller/linear_y_joint
      - platform_velocity_controller/rotational_yaw_joint
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    # Command just velocity to support layering with the mobile base controller.
    command_interfaces: ["velocity"]
    # Base frame of the kinematic chain, for computation of arm kinematics.
    base_frame: world
    # The tip link of the kinematic chain, i.e. the frame that will be controlled.
    ee_frame: grasp_link
    # The frame where the force / torque sensor reading is given.
    # (Needs to exist in the kinematic chain).
    sensor_frame: tool0
    # Maximum joint-space velocities.
    max_joint_velocity:
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
    # Maximum joint-space accelerations.
    max_joint_acceleration:
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
      - 2.0
    # Maximum Cartesian-space velocities.
    max_cartesian_velocity:
      - 0.25
      - 0.25
      - 0.25
      - 1.0
      - 1.0
      - 1.0
    # Maximum Cartesian-space accelerations.
    max_cartesian_acceleration:
      - 2.0
      - 2.0
      - 2.0
      - 4.0
      - 4.0
      - 4.0
    # Rate in Hz at which the controller will publish the state.
    state_publish_rate: 10
    # Damping coefficient for the Jacobian damped least-squares inverse.
    jacobian_damping: 0.002
    # Timeout in seconds after which the controller will stop motion if no new commands are received.
    command_timeout: 0.2
    # Padding (in radians) to add to joint position limits as a safety margin.
    joint_limit_position_tolerance: 0.02
